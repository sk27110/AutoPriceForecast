import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


def show_data_analysis(df: pd.DataFrame) -> None:
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–∞–∑–¥–µ–ª –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö."""
    st.title("üìä –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π")
    
    with st.expander("üîç –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö", expanded=True):
        st.dataframe(df.head())

    try:
        col1, col2 = st.columns(2)
        with col1:
            st.subheader("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–µ–Ω")
            fig, ax = plt.subplots(figsize=(8, 4))
            sns.histplot(
                df['price'],
                bins=30,
                kde=True,
                ax=ax,
                binrange=(0, 10_000_000))
            ax.set_xlim(0, 10_000_000)
            ax.set_xticks(range(0, 11_000_000, 1_000_000))
            ax.set_xticklabels([f"{x//1_000_000}M" for x in ax.get_xticks()])
            st.pyplot(fig)

        with col2:
            st.subheader("–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è –ø—Ä–∏–∑–Ω–∞–∫–æ–≤")
            numeric_cols = ['year', 'mileage', 'engine_capacity',
                            'engine_power', 'travel_distance', 'price']
            fig, ax = plt.subplots(figsize=(8, 4))
            sns.heatmap(df[numeric_cols].corr(), annot=True, ax=ax)
            st.pyplot(fig)
    except KeyError as e:
        st.error(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–ª–æ–Ω–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏: {str(e)}")

    try:
        st.subheader("–ê–Ω–∞–ª–∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤")
        categorical_cols = ['transmission', 'body_type',
                           'drive_type', 'color', 'fuel_type']
        categorical = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–∑–Ω–∞–∫", categorical_cols)
        fig, ax = plt.subplots(figsize=(10, 4))
        df[categorical].value_counts().plot(kind='bar', ax=ax)
        st.pyplot(fig)
    except KeyError as e:
        st.error(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω–∞—è –∫–æ–ª–æ–Ω–∫–∞: {str(e)}")
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤: {str(e)}")
