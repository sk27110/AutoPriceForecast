import streamlit as st
from api.client import scan_pretrained_models, load_pretrained_model, activate_pretrained_model


def show_pretrained_management() -> None:
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–∞–∑–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–æ–±—É—á–µ–Ω–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏."""
    st.title("üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–æ–±—É—á–µ–Ω–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏")
    
    col1, col2 = st.columns([1, 4])
    with col1:
        if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫"):
            st.rerun()
    
    pretrained_models = scan_pretrained_models()
    
    if not pretrained_models:
        st.warning("–í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ saved_models –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø—Ä–µ–¥–æ–±—É—á–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π (.pkl —Ñ–∞–π–ª–æ–≤)")
        return
    
    st.success(f"–ù–∞–π–¥–µ–Ω–æ {len(pretrained_models)} –ø—Ä–µ–¥–æ–±—É—á–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π")
    
    for model in pretrained_models:
        with st.expander(f"üìÅ {model['filename']} ({model['file_size']} –±–∞–π—Ç)"):
            col1, col2, col3 = st.columns([2, 1, 1])
            
            with col1:
                st.write(f"**ID –º–æ–¥–µ–ª–∏:** {model['model_id']}")
                st.write(f"**–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞:** {model['file_size']:,} –±–∞–π—Ç")
                st.write(f"**–°—Ç–∞—Ç—É—Å:** {'‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞' if model['is_loaded'] else '‚è≥ –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞'}")
            
            with col2:
                if st.button(f"üì• –ó–∞–≥—Ä—É–∑–∏—Ç—å", key=f"load_{model['filename']}"):
                    with st.spinner("–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏..."):
                        result = load_pretrained_model(model['filename'])
                        if 'error' in result:
                            st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {result['error']}")
                        else:
                            st.success(f"–ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∫–∞–∫ {result['model_id']}")
                            st.rerun()
            
            with col3:
                if st.button(f"‚ö° –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å", key=f"activate_{model['filename']}"):
                    with st.spinner("–ê–∫—Ç–∏–≤–∞—Ü–∏—è –º–æ–¥–µ–ª–∏..."):
                        result = activate_pretrained_model(model['filename'])
                        if 'error' in result:
                            st.error(f"–û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {result['error']}")
                        else:
                            st.success(f"–ú–æ–¥–µ–ª—å {result['model_id']} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!")
                            st.rerun()
