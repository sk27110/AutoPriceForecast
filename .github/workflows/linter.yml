name: linters

on:
  push:
  pull_request:

jobs:
  lint-dockerfile:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Run Hadolint
        run: |
          set -eo pipefail

          echo "Searching for Dockerfiles..."
          
          dockerfile_paths=()
          
          while IFS= read -r -d $'\0' file; do
            dockerfile_paths+=("$file")
          done < <(find . \
            -path ./.git -prune -o \
            -type f \( -name "Dockerfile" -o -name "*.dockerfile" -o -name "Dockerfile.*" \) -print0)

          if [ ${#dockerfile_paths[@]} -eq 0 ]; then
            echo "No Dockerfiles found to lint."
            exit 0
          else
            echo "Found Dockerfiles to lint:"
            printf " - %s\n" "${dockerfile_paths[@]}"
          fi

          for dockerfile_path in "${dockerfile_paths[@]}"; do
            echo "Linting $dockerfile_path ..."
            docker run --rm -i hadolint/hadolint:fcbd01791c9251d83f2486e61ecaf41ee700a766-alpine-amd64 < "$dockerfile_path"
          done
          
          echo "All found Dockerfiles have been linted."

  # lint-shell-scripts:
  #   name: Lint Shell Scripts
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v4

  #     - name: Run ShellCheck
  #       run: |
  #         find . -name "*.sh" -print0 | xargs -0 -t -n1 docker run --rm -v "${{ github.workspace }}:/mnt" koalaman/shellcheck:stable

  lint-python:
    name: Lint Python Code
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python linters
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pylint
          pip install pycodestyle

      - name: Run Flake8
        run: flake8 . --max-line-length=120 --count --show-source --statistics

      - name: Check style with pycodestyle
        run: pycodestyle .

      - name: Run Pylint
        run: |
          find . -name "*.py" -print0 | xargs -0 pylint --max-line-length=120 --disable="C0103,C0114,C0115"